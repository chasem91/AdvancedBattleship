{"version":3,"sources":["webpack:///webpack/bootstrap 9173c37fc54aca4fe5be","webpack:///./js/battleship.js","webpack:///./js/player_board.js","webpack:///./js/opponent_board.js","webpack:///./js/ship.js"],"names":["canvas","document","getElementById","engine","BABYLON","Engine","scene","Scene","camera","FreeCamera","Vector3","lockedTarget","attachControl","light","HemisphericLight","intensity","playerBoard","opponentBoard","position","x","attatchEmitter","mesh","particleSystem","ParticleSystem","particleTexture","Texture","emitter","minEmitBox","maxEmitBox","minSize","maxSize","minLifeTime","maxLifeTime","emitRate","blendMode","BLENDMODE_ONEONE","gravity","direction1","direction2","minAngularSpeed","Math","PI","maxAngularSpeed","minEmitPower","maxEmitPower","updateSpeed","updateFunction","particles","index","length","particle","age","_scaledUpdateSpeed","lifeTime","splice","_stockParticles","push","colorStep","scaleToRef","_scaledColorStep","color","addInPlace","a","angle","angularSpeed","direction","_scaledDirection","_scaledGravity","start","fireProjectile","point","projectile","Mesh","CreateSphere","round","y","z","vertAnim1","animationProjectile","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CYCLE","keys","frame","value","setKeys","easingFunction","QuadraticEase","setEasingMode","EasingFunction","EASINGMODE_EASEOUT","setEasingFunction","vertAnim2","nextPos","EASINGMODE_EASEIN","horizAnim","animations","beginAnimation","p","s","startingPoint","currentMesh","snapToGrid","shipSegments","getMeshesByTags","id","forEach","segment","getGroundPosition","pickInfo","pick","pointerX","pointerY","hit","pickedPoint","onMouseDown","e","button","pickedMesh","setTimeout","detachControl","onMouseUp","name","subMeshes","subMeshId","onMouseMove","current","diff","subtract","currentMeshes","onMouseOver","preventDefault","onKeyPress","key","oldPosition","newPosition","positionOffset","addEventListener","window","onDispose","removeEventListener","playerShipNames","registerBeforeRender","subMesh","materialIndex","originalMaterialIndex","shipName","ray","Ray","getBoundingInfo","boundingBox","maximumWorld","worldInverse","Matrix","getWorldMatrix","invertToRef","Transform","intersects","runRenderLoop","render","tiledGround","CreateTiledGround","lightGreenMaterial","StandardMaterial","diffuseColor","Color3","darkGreenMaterial","redMaterial","multimat","MultiMaterial","subMaterials","material","verticesCount","getTotalVertices","tileIndicesLength","getIndices","base","row","col","SubMesh","lightRedMaterial","darkRedMaterial","yellowMaterial","orangeMaterial","rotate","boardName","boxes","i","CreateBox","box","idx","Tags","AddTagsTo","isPickable"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;AACA;;;;AACA;;;;;;AAEA,KAAMA,SAASC,SAASC,cAAT,CAAwB,eAAxB,CAAf;AACA,KAAMC,SAAS,IAAIC,QAAQC,MAAZ,CAAmBL,MAAnB,EAA2B,IAA3B,CAAf;;AAEA,KAAMM,QAAQ,IAAIF,QAAQG,KAAZ,CAAkBJ,MAAlB,CAAd;AACA,KAAMK,SAAS,IAAIJ,QAAQK,UAAZ,CAAuB,SAAvB,EAAkC,IAAIL,QAAQM,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,CAA9B,CAAlC,EAAoEJ,KAApE,CAAf;AACAE,QAAOG,YAAP,GAAsB,IAAIP,QAAQM,OAAZ,CAAoB,CAAC,EAArB,EAAyB,CAAzB,EAA4B,CAA5B,CAAtB;AACAF,QAAOI,aAAP,CAAqBZ,MAArB,EAA6B,IAA7B;AACA,KAAMa,QAAQ,IAAIT,QAAQU,gBAAZ,CAA6B,QAA7B,EAAuC,IAAIV,QAAQM,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAvC,EAAqEJ,KAArE,CAAd;AACAO,OAAME,SAAN,GAAkB,GAAlB;;AAEA,KAAMC,cAAc,4BAAkBV,KAAlB,CAApB;AACA,KAAMW,gBAAgB,8BAAoBX,KAApB,CAAtB;AACAW,eAAcC,QAAd,CAAuBC,CAAvB,GAA2B,CAAC,GAA5B;AACA,qBAAW,kBAAX,EAA+B,aAA/B,EAA8C,CAA9C,EAAiDb,KAAjD;AACA,qBAAW,aAAX,EAA0B,aAA1B,EAAyC,CAAzC,EAA4CA,KAA5C;AACA,qBAAW,YAAX,EAAyB,aAAzB,EAAwC,CAAxC,EAA2CA,KAA3C;AACA,qBAAW,YAAX,EAAyB,aAAzB,EAAwC,CAAxC,EAA2CA,KAA3C;AACA,qBAAW,aAAX,EAA0B,aAA1B,EAAyC,CAAzC,EAA4CA,KAA5C;AACA,qBAAW,kBAAX,EAA+B,eAA/B,EAAgD,CAAhD,EAAmDA,KAAnD;AACA,qBAAW,aAAX,EAA0B,eAA1B,EAA2C,CAA3C,EAA8CA,KAA9C;AACA,qBAAW,YAAX,EAAyB,eAAzB,EAA0C,CAA1C,EAA6CA,KAA7C;AACA,qBAAW,YAAX,EAAyB,eAAzB,EAA0C,CAA1C,EAA6CA,KAA7C;AACA,qBAAW,aAAX,EAA0B,eAA1B,EAA2C,CAA3C,EAA8CA,KAA9C;;AAEA,KAAMc,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B;AACA,OAAMC,iBAAiB,IAAIlB,QAAQmB,cAAZ,CAA2B,WAA3B,EAAwC,GAAxC,EAA6CjB,KAA7C,CAAvB;;AAEA;AACAgB,kBAAeE,eAAf,GAAiC,IAAIpB,QAAQqB,OAAZ,CAAoB,eAApB,EAAqCnB,KAArC,CAAjC;;AAEA;AACAgB,kBAAeI,OAAf,GAAyBL,IAAzB,CAR+B,CAQA;AAC/BC,kBAAeK,UAAf,GAA4B,IAAIvB,QAAQM,OAAZ,CAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAA5B,CAT+B,CAS4B;AAC3DY,kBAAeM,UAAf,GAA4B,IAAIxB,QAAQM,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAA5B,CAV+B,CAU2B;;AAE1DY,kBAAeO,OAAf,GAAyB,GAAzB;AACAP,kBAAeQ,OAAf,GAAyB,GAAzB;;AAEAR,kBAAeS,WAAf,GAA6B,GAA7B;AACAT,kBAAeU,WAAf,GAA6B,GAA7B;;AAEAV,kBAAeW,QAAf,GAA0B,IAA1B;;AAEA;AACAX,kBAAeY,SAAf,GAA2B9B,QAAQmB,cAAR,CAAuBY,gBAAlD;;AAEAb,kBAAec,OAAf,GAAyB,IAAIhC,QAAQM,OAAZ,CAAoB,CAApB,EAAuB,CAAC,IAAxB,EAA8B,CAA9B,CAAzB;;AAEAY,kBAAee,UAAf,GAA4B,IAAIjC,QAAQM,OAAZ,CAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAA5B;AACAY,kBAAegB,UAAf,GAA4B,IAAIlC,QAAQM,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAA3B,CAA5B;;AAEAY,kBAAeiB,eAAf,GAAiCC,KAAKC,EAAtC;AACAnB,kBAAeoB,eAAf,GAAiC,IAAIF,KAAKC,EAA1C;;AAEA;AACAnB,kBAAeqB,YAAf,GAA8B,CAA9B;AACArB,kBAAesB,YAAf,GAA8B,CAA9B;AACAtB,kBAAeuB,WAAf,GAA6B,KAA7B;;AAED,OAAMC,iBAAiB,SAAjBA,cAAiB,CAASC,SAAT,EAAoB;AAC1C,UAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQD,UAAUE,MAAtC,EAA8CD,OAA9C,EAAuD;AACtD,WAAME,WAAWH,UAAUC,KAAV,CAAjB;AACAE,gBAASC,GAAT,IAAgB,KAAKC,kBAArB;;AAEA,WAAIF,SAASC,GAAT,IAAgBD,SAASG,QAA7B,EAAuC;AACtCN,mBAAUO,MAAV,CAAiBN,KAAjB,EAAwB,CAAxB;AACA,cAAKO,eAAL,CAAqBC,IAArB,CAA0BN,QAA1B;AACAF;AACA;AACA,QALD,MAKO;AACNE,kBAASO,SAAT,CAAmBC,UAAnB,CAA8B,KAAKN,kBAAnC,EAAuD,KAAKO,gBAA5D;AACAT,kBAASU,KAAT,CAAeC,UAAf,CAA0B,KAAKF,gBAA/B;;AAEA,aAAIT,SAASU,KAAT,CAAeE,CAAf,GAAmB,CAAvB,EACEZ,SAASU,KAAT,CAAeE,CAAf,GAAmB,CAAnB;;AAEFZ,kBAASa,KAAT,IAAkBb,SAASc,YAAT,GAAwB,KAAKZ,kBAA/C;;AAEAF,kBAASe,SAAT,CAAmBP,UAAnB,CAA8B,KAAKN,kBAAnC,EAAuD,KAAKc,gBAA5D;AACAhB,kBAAShC,QAAT,CAAkB2C,UAAlB,CAA6B,KAAKK,gBAAlC;;AAEA,cAAK9B,OAAL,CAAasB,UAAb,CAAwB,KAAKN,kBAA7B,EAAiD,KAAKe,cAAtD;AACAjB,kBAASe,SAAT,CAAmBJ,UAAnB,CAA8B,KAAKM,cAAnC;AACA;AACD;AACD,IA1BD;;AA4BA7C,kBAAewB,cAAf,GAAgCA,cAAhC;;AAECxB,kBAAe8C,KAAf;AACD,EAnED;;AAqEA,KAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,OAAMC,aAAa,IAAInE,QAAQoE,IAAR,CAAaC,YAAjB,CAA8B,YAA9B,EAA4C,EAA5C,EAAgD,CAAhD,EAAmDnE,KAAnD,CAAnB;AACAiE,cAAWrD,QAAX,GAAsB,IAAId,QAAQM,OAAZ,CACnB8B,KAAKkC,KAAL,CAAWJ,MAAMnD,CAAN,GAAU,EAArB,IAA2B,EAA5B,GAAkC,GADd,EAEpBoD,WAAWrD,QAAX,CAAoByD,CAFA,EAGnBnC,KAAKkC,KAAL,CAAW,CAACJ,MAAMM,CAAN,GAAU,EAAX,IAAiB,EAA5B,IAAkC,EAAnC,GAAyC,EAHrB,CAAtB;AAKA,OAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAMC,sBAAsB,IAAI1E,QAAQ2E,SAAZ,CAC1B,cAD0B,EAE1B,YAF0B,EAG1B,EAH0B,EAI1B3E,QAAQ2E,SAAR,CAAkBC,mBAJQ,EAK1B5E,QAAQ2E,SAAR,CAAkBE,uBALQ,CAA5B;;AAQA,SAAMC,OAAO,EAAb;AACAA,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,CAAR,EAAWC,OAAO,CAAlB,EAAV;AACAF,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,EAAR,EAAYC,OAAO,GAAnB,EAAV;;AAEAN,yBAAoBO,OAApB,CAA4BH,IAA5B;;AAEA,SAAMI,iBAAiB,IAAIlF,QAAQmF,aAAZ,EAAvB;AACAD,oBAAeE,aAAf,CAA6BpF,QAAQqF,cAAR,CAAuBC,kBAApD;;AAEAZ,yBAAoBa,iBAApB,CAAsCL,cAAtC;;AAEA,YAAOR,mBAAP;AACD,IArBD;AAsBA,OAAMc,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAMd,sBAAsB,IAAI1E,QAAQ2E,SAAZ,CAC1B,cAD0B,EAE1B,YAF0B,EAG1B,EAH0B,EAI1B3E,QAAQ2E,SAAR,CAAkBC,mBAJQ,EAK1B5E,QAAQ2E,SAAR,CAAkBE,uBALQ,CAA5B;;AAQA,SAAMY,UAAU,CAAhB;;AAEA,SAAMX,OAAO,EAAb;AACAA,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,EAAR,EAAYC,OAAO,GAAnB,EAAV;AACAF,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,GAAR,EAAaC,OAAO,CAApB,EAAV;;AAEAN,yBAAoBO,OAApB,CAA4BH,IAA5B;;AAEA,SAAMI,iBAAiB,IAAIlF,QAAQmF,aAAZ,EAAvB;AACAD,oBAAeE,aAAf,CAA6BpF,QAAQqF,cAAR,CAAuBK,iBAApD;;AAEAhB,yBAAoBa,iBAApB,CAAsCL,cAAtC;;AAEA,YAAOR,mBAAP;AACD,IAvBD;AAwBA,OAAMiB,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAMjB,sBAAsB,IAAI1E,QAAQ2E,SAAZ,CAC1B,cAD0B,EAE1B,YAF0B,EAG1B,EAH0B,EAI1B3E,QAAQ2E,SAAR,CAAkBC,mBAJQ,EAK1B5E,QAAQ2E,SAAR,CAAkBE,uBALQ,CAA5B;;AAQA,SAAMY,UAAUtB,WAAWrD,QAAX,CAAoBC,CAApB,GAAwB,GAAxC;;AAEA,SAAM+D,OAAO,EAAb;AACAA,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,CAAR,EAAWC,OAAOb,WAAWrD,QAAX,CAAoBC,CAAtC,EAAV;AACA+D,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,EAAR,EAAYC,OAAOS,OAAnB,EAAV;AACAX,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,EAAR,EAAYC,OAAOS,UAAU,GAA7B,EAAV;AACAX,UAAK1B,IAAL,CAAU,EAAC2B,OAAO,GAAR,EAAaC,OAAOS,OAApB,EAAV;;AAEAf,yBAAoBO,OAApB,CAA4BH,IAA5B;;AAEA,YAAOJ,mBAAP;AACD,IApBD;;AAsBAP,cAAWyB,UAAX,CAAsBxC,IAAtB,CAA2BqB,WAA3B;AACAN,cAAWyB,UAAX,CAAsBxC,IAAtB,CAA2BuC,WAA3B;;AAEA3E,kBAAemD,UAAf;;AAEAjE,SAAM2F,cAAN,CACE1B,UADF,EAEE,CAFF,EAEK,EAFL,EAES,KAFT,EAEgB,CAFhB,EAGE,YAAM;AACJA,gBAAWyB,UAAX,GAAwB,EAAxB;AACAzB,gBAAWyB,UAAX,CAAsBxC,IAAtB,CAA2BoC,WAA3B;AACArB,gBAAWyB,UAAX,CAAsBxC,IAAtB,CAA2BuC,WAA3B;AACAzF,WAAM2F,cAAN,CACE1B,UADF,EAEE,EAFF,EAEM,GAFN,EAEW,KAFX,EAEkB,CAFlB,EAGE,YAAM;AACJ,WAAM2B,IAAI3B,UAAV;AACA,WAAM4B,IAAI7F,KAAV;AACA;AACD,MAPH;AASD,IAhBH;AAkBD,EAlGD;;AAoGA,KAAI8F,sBAAJ;AACA,KAAIC,oBAAJ;;AAEA,KAAMC,aAAa,SAAbA,UAAa,GAAM;AACvB,OAAMC,eAAejG,MAAMkG,eAAN,CAAsBH,YAAYI,EAAlC,CAArB;AACAF,gBAAaG,OAAb,CAAqB,mBAAW;AAC9BC,aAAQzF,QAAR,GAAmB,IAAId,QAAQM,OAAZ,CAChB8B,KAAKkC,KAAL,CAAW,CAACiC,QAAQzF,QAAR,CAAiBC,CAAjB,GAAqB,EAAtB,IAA4B,EAAvC,IAA6C,EAA9C,GAAoD,EADnC,EAEjBwF,QAAQzF,QAAR,CAAiByD,CAFA,EAGhBnC,KAAKkC,KAAL,CAAW,CAACiC,QAAQzF,QAAR,CAAiB0D,CAAjB,GAAqB,EAAtB,IAA4B,EAAvC,IAA6C,EAA9C,GAAoD,EAHnC,CAAnB;AAKD,IAND;AAOD,EATD;AAUA,KAAMgC,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9B,OAAMC,WAAWvG,MAAMwG,IAAN,CAAWxG,MAAMyG,QAAjB,EAA2BzG,MAAM0G,QAAjC,EAA2C,UAAC3F,IAAD,EAAU;AACpE,YAAOA,QAAQL,WAAf;AACD,IAFgB,CAAjB;AAGA,OAAI6F,SAASI,GAAb,EAAkB;AAChB,YAAOJ,SAASK,WAAhB;AACD;AACD,UAAO,IAAP;AACD,EARD;AASA,KAAMC,cAAc,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzB,OAAIA,EAAEC,MAAF,KAAa,CAAjB,EAAoB;AAClB;AACD;AACD,OAAMR,WAAWvG,MAAMwG,IAAN,CAAWxG,MAAMyG,QAAjB,EAA2BzG,MAAM0G,QAAjC,EAA2C,UAAC3F,IAAD,EAAU;AACpE,YAAOA,SAASL,WAAhB;AACD,IAFgB,CAAjB;AAGA,OAAI6F,SAASI,GAAb,EAAkB;AAChBZ,mBAAcQ,SAASS,UAAvB;AACAlB,qBAAgBQ,mBAAhB;AACA,SAAIR,aAAJ,EAAmB;AACjBmB,kBAAW,YAAM;AACf/G,gBAAOgH,aAAP,CAAqBxH,MAArB;AACD,QAFD,EAEG,CAFH;AAGD;AACF;AACF,EAhBD;AAiBA,KAAMyH,YAAY,SAAZA,SAAY,GAAM;AACtB,OAAMZ,WAAWvG,MAAMwG,IAAN,CAAWxG,MAAMyG,QAAjB,EAA2BzG,MAAM0G,QAAjC,CAAjB;AACA,OAAIZ,aAAJ,EAAmB;AACjB5F,YAAOI,aAAP,CAAqBZ,MAArB,EAA6B,IAA7B;AACAoG,qBAAgB,IAAhB;AACAE;AACA;AACD,IALD,MAKO,IAAIO,SAASS,UAAT,IAAwBT,SAASS,UAAT,CAAoBI,IAApB,KAA6B,eAAzD,EAA2E;AAChFzG,mBAAc0G,SAAd,CAAwBd,SAASe,SAAjC,EAA4CX,GAA5C,GAAkD,IAAlD;AACA5C,oBAAewC,SAASK,WAAxB;AACD;AACF,EAXD;AAYA,KAAMW,cAAc,SAAdA,WAAc,CAACT,CAAD,EAAO;AACvB,OAAI,CAAChB,aAAL,EAAoB;AAChB;AACH;;AAED,OAAM0B,UAAUlB,kBAAkBQ,CAAlB,CAAhB;;AAEA,OAAI,CAACU,OAAL,EAAc;AACV;AACH;;AAED,OAAMC,OAAOD,QAAQE,QAAR,CAAiB5B,aAAjB,CAAb;AACA,OAAM6B,gBAAgB3H,MAAMkG,eAAN,CAAsBH,YAAYI,EAAlC,CAAtB;AACA,OAAIwB,cAAchF,MAAd,GAAuB,CAA3B,EAA8B;AAC5BgF,mBAAcvB,OAAd,CAAuB,gBAAQ;AAC7BrF,YAAKH,QAAL,CAAc2C,UAAd,CAAyBkE,IAAzB;AACD,MAFD;AAGD,IAJD,MAIO;AACL1B,iBAAYnF,QAAZ,CAAqB2C,UAArB,CAAgCkE,IAAhC;AACD;;AAED3B,mBAAgB0B,OAAhB;AAEH,EAvBD;AAwBA,KAAMI,cAAc,SAAdA,WAAc,CAACd,CAAD,EAAO;AACzBA,KAAEe,cAAF;AACA,OAAMhC,IAAI7F,KAAV;AACD,EAHD;AAIA,KAAM8H,aAAa,SAAbA,UAAa,CAAChB,CAAD,EAAO;AACxB,OAAIA,EAAEiB,GAAF,KAAU,GAAd,EAAmB;AACjB,SAAIhC,WAAJ,EAAiB;AAAA;AACf,aAAM4B,gBAAgB3H,MAAMkG,eAAN,CAAsBH,YAAYI,EAAlC,CAAtB;AACA,aAAM6B,cAAcjC,YAAYnF,QAAhC;AACA+G,uBAAcvB,OAAd,CAAuB,gBAAQ;AAC7BrF,gBAAKH,QAAL,GAAgB,IAAId,QAAQM,OAAZ,CACdW,KAAKH,QAAL,CAAc0D,CADA,EAEdvD,KAAKH,QAAL,CAAcyD,CAFA,EAGdtD,KAAKH,QAAL,CAAcC,CAHA,CAAhB;AAKD,UAND;AAOA,aAAMoH,cAAclC,YAAYnF,QAAhC;AACA,aAAMsH,iBAAiB,IAAIpI,QAAQM,OAAZ,CACpB4H,YAAYnH,CAAZ,GAAgBoH,YAAYpH,CADR,EAEpBmH,YAAY3D,CAAZ,GAAgB4D,YAAY5D,CAFR,EAGpB2D,YAAY1D,CAAZ,GAAgB2D,YAAY3D,CAHR,CAAvB;AAKAqD,uBAAcvB,OAAd,CAAuB,gBAAQ;AAC7BrF,gBAAKH,QAAL,CAAc2C,UAAd,CAAyB2E,cAAzB;AACD,UAFD;AAhBe;AAmBhB;AACF;AACF,EAvBD;;AAyBAxI,QAAOyI,gBAAP,CAAwB,WAAxB,EAAqCtB,WAArC,EAAkD,KAAlD;AACAnH,QAAOyI,gBAAP,CAAwB,SAAxB,EAAmChB,SAAnC,EAA8C,KAA9C;AACAzH,QAAOyI,gBAAP,CAAwB,WAAxB,EAAqCZ,WAArC,EAAkD,KAAlD;AACA7H,QAAOyI,gBAAP,CAAwB,WAAxB,EAAqCP,WAArC,EAAkD,KAAlD;AACAQ,QAAOD,gBAAP,CAAwB,UAAxB,EAAoCL,UAApC,EAAgD,KAAhD;;AAEA9H,OAAMqI,SAAN,GAAkB,YAAM;AACtB3I,UAAO4I,mBAAP,CAA2B,WAA3B,EAAwCzB,WAAxC;AACAnH,UAAO4I,mBAAP,CAA2B,SAA3B,EAAsCnB,SAAtC;AACAzH,UAAO4I,mBAAP,CAA2B,WAA3B,EAAwCf,WAAxC;AACA7H,UAAO4I,mBAAP,CAA2B,WAA3B,EAAwCV,WAAxC;AACAQ,UAAOE,mBAAP,CAA2B,UAA3B,EAAuCR,UAAvC;AACD,EAND;;AAQA,KAAMS,kBAAkB,CACtB,kBADsB,EAEtB,aAFsB,EAGtB,YAHsB,EAItB,YAJsB,EAKtB,aALsB,CAAxB;;AAQAvI,OAAMwI,oBAAN,CAA2B,YAAM;AAC/B9H,eAAY2G,SAAZ,CAAsBjB,OAAtB,CAA+B,mBAAW;AACxCqC,aAAQC,aAAR,GAAwBD,QAAQE,qBAAhC;AACD,IAFD;AAGAJ,mBAAgBnC,OAAhB,CAAyB,oBAAY;AACnC,SAAMH,eAAejG,MAAMkG,eAAN,CAAsB0C,QAAtB,CAArB;AACA3C,kBAAaG,OAAb,CAAqB,mBAAW;AAC9B,WAAIyC,MAAM,IAAI/I,QAAQgJ,GAAZ,CACR,IAAIhJ,QAAQM,OAAZ,CACEiG,QAAQzF,QAAR,CAAiBC,CADnB,EAEEH,YAAYqI,eAAZ,GAA8BC,WAA9B,CAA0CC,YAA1C,CAAuD5E,CAAvD,GAA2D,CAF7D,EAGEgC,QAAQzF,QAAR,CAAiB0D,CAHnB,CADQ,EAKN,IAAIxE,QAAQM,OAAZ,CAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2B,CAA3B,CALM,CAAV;AAOE,WAAM8I,eAAe,IAAIpJ,QAAQqJ,MAAZ,EAArB;AACAzI,mBAAY0I,cAAZ,GAA6BC,WAA7B,CAAyCH,YAAzC;AACAL,aAAM/I,QAAQgJ,GAAR,CAAYQ,SAAZ,CAAsBT,GAAtB,EAA2BK,YAA3B,CAAN;AACA,WAAM3C,WAAW7F,YAAY6I,UAAZ,CAAuBV,GAAvB,CAAjB;AACA,WAAItC,SAASI,GAAb,EAAkB;AAChBjG,qBAAY2G,SAAZ,CAAsBd,SAASe,SAA/B,EAA0CoB,aAA1C,GAA0D,CAA1D;AACD;AACF,MAfH;AAgBD,IAlBD;AAmBA/H,iBAAc0G,SAAd,CAAwBjB,OAAxB,CAAiC,mBAAW;AAC1CqC,aAAQC,aAAR,GAAwBD,QAAQ9B,GAAR,GAAc,CAAd,GAAkB8B,QAAQE,qBAAlD;AACD,IAFD;AAGA,OAAMpC,WAAWvG,MAAMwG,IAAN,CAAWxG,MAAMyG,QAAjB,EAA2BzG,MAAM0G,QAAjC,CAAjB;AACA,OAAIH,SAASS,UAAT,IAAwBT,SAASS,UAAT,CAAoBI,IAApB,KAA6B,eAAzD,EAA0E;AACxE,SAAMqB,UAAU9H,cAAc0G,SAAd,CAAwBd,SAASe,SAAjC,CAAhB;AACA,SAAImB,QAAQ9B,GAAZ,EAAiB;AACf8B,eAAQC,aAAR,GAAwB,CAAxB;AACD,MAFD,MAEO;AACLD,eAAQC,aAAR,GAAwB,CAAxB;AACD;AACF;AACF,EAnCD;;AAqCA7I,QAAO2J,aAAP,CAAqB,YAAM;AACzBxJ,SAAMyJ,MAAN;AACD,EAFD,E;;;;;;;;;;;;mBCxWe,UAACzJ,KAAD,EAAW;AACxB,OAAM0J,cAAc,IAAI5J,QAAQoE,IAAR,CAAayF,iBAAjB,CAClB,aADkB,EAElB,CAAC,GAFiB,EAEZ,CAAC,GAFW,EAEN,GAFM,EAED,GAFC,EAGlB,EAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAHkB,EAIlB,EAAE,KAAK,EAAP,EAAW,KAAK,EAAhB,EAJkB,EAKlB3J,KALkB,CAApB;AAOA,OAAM4J,qBAAqB,IAAI9J,QAAQ+J,gBAAZ,CAA6B,YAA7B,EAA2C7J,KAA3C,CAA3B;AACA4J,sBAAmBE,YAAnB,GAAkC,IAAIhK,QAAQiK,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,CAAlC;;AAEA,OAAMC,oBAAoB,IAAIlK,QAAQ+J,gBAAZ,CAA6B,WAA7B,EAA0C7J,KAA1C,CAA1B;AACAgK,qBAAkBF,YAAlB,GAAiC,IAAIhK,QAAQiK,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,CAAjC;;AAEA,OAAME,cAAc,IAAInK,QAAQ+J,gBAAZ,CAA6B,KAA7B,EAAoC7J,KAApC,CAApB;AACAiK,eAAYH,YAAZ,GAA2B,IAAIhK,QAAQiK,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAA3B;;AAEA,OAAMG,WAAW,IAAIpK,QAAQqK,aAAZ,CAA0B,OAA1B,EAAmCnK,KAAnC,CAAjB;AACAkK,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B0G,kBAA3B;AACAM,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B8G,iBAA3B;AACAE,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B+G,WAA3B;;AAEAP,eAAYW,QAAZ,GAAuBH,QAAvB;;AAEA,OAAMI,gBAAgBZ,YAAYa,gBAAZ,EAAtB;AACA,OAAMC,oBAAoBd,YAAYe,UAAZ,GAAyB9H,MAAzB,IAAmC,KAAK,EAAxC,CAA1B;;AAEA+G,eAAYrC,SAAZ,GAAwB,EAAxB;AACA,OAAIqD,OAAO,CAAX;AACA,QAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,EAAxB,EAA4BA,KAA5B,EAAmC;AACjC,UAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,EAAxB,EAA4BA,KAA5B,EAAmC;AACjC,WAAMlC,gBAAgBiC,MAAI,CAAJ,GAAQC,MAAI,CAAlC;AACA,WAAMnC,UAAU,IAAI3I,QAAQ+K,OAAZ,CACdnC,aADc,EAEd,CAFc,EAGd4B,aAHc,EAIdI,IAJc,EAKdF,iBALc,EAMdd,WANc,CAAhB;AAQAjB,eAAQE,qBAAR,GAAgCD,aAAhC;AACAgB,mBAAYrC,SAAZ,CAAsBnE,IAAtB,CAA2BuF,OAA3B;AACAiC,eAAQF,iBAAR;AACD;AACF;AACD,UAAOd,WAAP;AACD,E;;;;;;;;;;;;mBC9Cc,UAAC1J,KAAD,EAAW;AACxB,OAAM0J,cAAc,IAAI5J,QAAQoE,IAAR,CAAayF,iBAAjB,CAClB,eADkB,EAElB,CAAC,GAFiB,EAEZ,CAAC,GAFW,EAEN,GAFM,EAED,GAFC,EAGlB,EAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAHkB,EAIlB,EAAE,KAAK,EAAP,EAAW,KAAK,EAAhB,EAJkB,EAKlB3J,KALkB,CAApB;AAOA,OAAM8K,mBAAmB,IAAIhL,QAAQ+J,gBAAZ,CAA6B,UAA7B,EAAyC7J,KAAzC,CAAzB;AACA8K,oBAAiBhB,YAAjB,GAAgC,IAAIhK,QAAQiK,MAAZ,CAAmB,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,CAAhC;;AAEA,OAAMgB,kBAAkB,IAAIjL,QAAQ+J,gBAAZ,CAA6B,SAA7B,EAAwC7J,KAAxC,CAAxB;AACA+K,mBAAgBjB,YAAhB,GAA+B,IAAIhK,QAAQiK,MAAZ,CAAmB,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,CAA/B;;AAEA,OAAMiB,iBAAiB,IAAIlL,QAAQ+J,gBAAZ,CAA6B,QAA7B,EAAuC7J,KAAvC,CAAvB;AACAgL,kBAAelB,YAAf,GAA8B,IAAIhK,QAAQiK,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAA9B;;AAEA,OAAMkB,iBAAiB,IAAInL,QAAQ+J,gBAAZ,CAA6B,QAA7B,EAAuC7J,KAAvC,CAAvB;AACAiL,kBAAenB,YAAf,GAA8B,IAAIhK,QAAQiK,MAAZ,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,CAA9B;;AAEA,OAAMG,WAAW,IAAIpK,QAAQqK,aAAZ,CAA0B,OAA1B,EAAmCnK,KAAnC,CAAjB;AACAkK,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B4H,gBAA3B;AACAZ,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B6H,eAA3B;AACAb,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B8H,cAA3B;AACAd,YAASE,YAAT,CAAsBlH,IAAtB,CAA2B+H,cAA3B;;AAEAvB,eAAYW,QAAZ,GAAuBH,QAAvB;AACA,OAAMI,gBAAgBZ,YAAYa,gBAAZ,EAAtB;AACA,OAAMC,oBAAoBd,YAAYe,UAAZ,GAAyB9H,MAAzB,IAAmC,KAAK,EAAxC,CAA1B;;AAEA+G,eAAYrC,SAAZ,GAAwB,EAAxB;AACA,OAAIqD,OAAO,CAAX;AACA,QAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,EAAxB,EAA4BA,KAA5B,EAAmC;AACjC,UAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,EAAxB,EAA4BA,KAA5B,EAAmC;AACjC,WAAMlC,gBAAgBiC,MAAI,CAAJ,GAAQC,MAAI,CAAlC;AACA,WAAMnC,UAAU,IAAI3I,QAAQ+K,OAAZ,CACdnC,aADc,EAEd,CAFc,EAGd4B,aAHc,EAIdI,IAJc,EAKdF,iBALc,EAMdd,WANc,CAAhB;AAQAjB,eAAQE,qBAAR,GAAgCD,aAAhC;AACAgB,mBAAYrC,SAAZ,CAAsBnE,IAAtB,CAA2BuF,OAA3B;AACAiC,eAAQF,iBAAR;AACD;AACF;AACD,UAAOd,WAAP;AACD,E;;;;;;;;;;;ACjDD,KAAMwB,SAAS,SAATA,MAAS,CAACnK,IAAD,EAAOf,KAAP,EAAiB;AAC9B,OAAM2H,gBAAgB3H,MAAMkG,eAAN,CAAsBnF,KAAKoF,EAA3B,CAAtB;AACA,OAAM6B,cAAcjH,KAAKH,QAAzB;AACA+G,iBAAcvB,OAAd,CAAuB,gBAAQ;AAC7BrF,UAAKH,QAAL,GAAgB,IAAId,QAAQM,OAAZ,CACdW,KAAKH,QAAL,CAAc0D,CADA,EAEdvD,KAAKH,QAAL,CAAcyD,CAFA,EAGdtD,KAAKH,QAAL,CAAcC,CAHA,CAAhB;AAKD,IAND;AAOA,OAAMoH,cAAclH,KAAKH,QAAzB;AACA,OAAMsH,iBAAiB,IAAIpI,QAAQM,OAAZ,CACpB4H,YAAYnH,CAAZ,GAAgBoH,YAAYpH,CADR,EAEpBmH,YAAY3D,CAAZ,GAAgB4D,YAAY5D,CAFR,EAGpB2D,YAAY1D,CAAZ,GAAgB2D,YAAY3D,CAHR,CAAvB;AAKAqD,iBAAcvB,OAAd,CAAuB,gBAAQ;AAC7BrF,UAAKH,QAAL,CAAc2C,UAAd,CAAyB2E,cAAzB;AACD,IAFD;AAGD,EAnBD;;mBAqBe,UAACd,IAAD,EAAO+D,SAAP,EAAkBxI,MAAlB,EAA0B3C,KAA1B,EAAoC;AACjD;AACA;AACA,OAAMoL,QAAQ,EAAd;AACA,QAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK1I,MAArB,EAA6B0I,GAA7B,EAAmC;AACjCD,WAAMlI,IAAN,CAAW,IAAIpD,QAAQoE,IAAR,CAAaoH,SAAjB,CAA4BlE,IAA5B,EAAkC,EAAlC,EAAsCpH,KAAtC,CAAX;AACD;AACDoL,SAAMhF,OAAN,CAAe,UAACmF,GAAD,EAAMC,GAAN,EAAc;AAC3B1L,aAAQ2L,IAAR,CAAaC,SAAb,CAAuBH,GAAvB,EAA4BnE,IAA5B;AACA,SAAI+D,cAAc,aAAlB,EAAiC;AAC/BI,WAAI3K,QAAJ,CAAaC,CAAb,GAAiB,KAAK2K,GAAtB;AACD,MAFD,MAEO;AACLD,WAAI3K,QAAJ,CAAaC,CAAb,GAAkB,KAAK2K,GAAN,GAAa,GAA9B;AACAD,WAAI3K,QAAJ,CAAa0D,CAAb,GAAiB,EAAjB;AACA;AACAiH,WAAII,UAAJ,GAAiB,KAAjB;AACD;AACF,IAVD;AAWA,OAAIR,cAAc,eAAlB,EAAmC;AACjCD,YAAOE,MAAM,CAAN,CAAP,EAAiBpL,KAAjB;AACD;AACF,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9173c37fc54aca4fe5be\n **/","import createPlayerBoard from './player_board';\r\nimport createOpponentBoard from './opponent_board';\r\nimport createShip from './ship.js';\r\n\r\nconst canvas = document.getElementById(\"render-canvas\");\r\nconst engine = new BABYLON.Engine(canvas, true);\r\n\r\nconst scene = new BABYLON.Scene(engine);\r\nconst camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(230, 240, 0), scene);\r\ncamera.lockedTarget = new BABYLON.Vector3(-30, 0, 0);\r\ncamera.attachControl(canvas, true);\r\nconst light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 1), scene);\r\nlight.intensity = 0.7;\r\n\r\nconst playerBoard = createPlayerBoard(scene);\r\nconst opponentBoard = createOpponentBoard(scene);\r\nopponentBoard.position.x = -250;\r\ncreateShip(\"aircraftCarrier1\", \"playerBoard\", 5, scene);\r\ncreateShip(\"battleship1\", \"playerBoard\", 4, scene);\r\ncreateShip(\"destroyer1\", \"playerBoard\", 3, scene);\r\ncreateShip(\"submarine1\", \"playerBoard\", 3, scene);\r\ncreateShip(\"patrolBoat1\", \"playerBoard\", 2, scene);\r\ncreateShip(\"aircraftCarrier2\", \"opponentBoard\", 5, scene);\r\ncreateShip(\"battleship2\", \"opponentBoard\", 4, scene);\r\ncreateShip(\"destroyer2\", \"opponentBoard\", 3, scene);\r\ncreateShip(\"submarine2\", \"opponentBoard\", 3, scene);\r\ncreateShip(\"patrolBoat2\", \"opponentBoard\", 2, scene);\r\n\r\nconst attatchEmitter = (mesh) => {\r\n  // Create a particle system\r\n  const particleSystem = new BABYLON.ParticleSystem(\"particles\", 600, scene);\r\n\r\n  //Texture of each particle\r\n  particleSystem.particleTexture = new BABYLON.Texture(\"explosion.png\", scene);\r\n\r\n  // Where the particles come from\r\n  particleSystem.emitter = mesh; // the starting object, the emitter\r\n  particleSystem.minEmitBox = new BABYLON.Vector3(-1, 0, 0); // Starting all from\r\n  particleSystem.maxEmitBox = new BABYLON.Vector3(1, 0, 0); // To...\r\n\r\n  particleSystem.minSize = 1.0;\r\n  particleSystem.maxSize = 3.0;\r\n\r\n  particleSystem.minLifeTime = 0.3;\r\n  particleSystem.maxLifeTime = 1.5;\r\n\r\n  particleSystem.emitRate = 1500;\r\n\r\n  // Blend mode : BLENDMODE_ONEONE, or BLENDMODE_STANDARD\r\n  particleSystem.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE;\r\n\r\n  particleSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);\r\n\r\n  particleSystem.direction1 = new BABYLON.Vector3(-7, 8, 3);\r\n  particleSystem.direction2 = new BABYLON.Vector3(7, 8, -3);\r\n\r\n  particleSystem.minAngularSpeed = Math.PI;\r\n  particleSystem.maxAngularSpeed = 2 * Math.PI;\r\n\r\n  // Speed\r\n  particleSystem.minEmitPower = 1;\r\n  particleSystem.maxEmitPower = 4;\r\n  particleSystem.updateSpeed = 0.005;\r\n\r\n\tconst updateFunction = function(particles) {\r\n\t\tfor (let index = 0; index < particles.length; index++) {\r\n\t\t\tconst particle = particles[index];\r\n\t\t\tparticle.age += this._scaledUpdateSpeed;\r\n\r\n\t\t\tif (particle.age >= particle.lifeTime) {\r\n\t\t\t\tparticles.splice(index, 1);\r\n\t\t\t\tthis._stockParticles.push(particle);\r\n\t\t\t\tindex--;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tparticle.colorStep.scaleToRef(this._scaledUpdateSpeed, this._scaledColorStep);\r\n\t\t\t\tparticle.color.addInPlace(this._scaledColorStep);\r\n\r\n\t\t\t\tif (particle.color.a < 0)\r\n\t\t\t\t  particle.color.a = 0;\r\n\r\n\t\t\t\tparticle.angle += particle.angularSpeed * this._scaledUpdateSpeed;\r\n\r\n\t\t\t\tparticle.direction.scaleToRef(this._scaledUpdateSpeed, this._scaledDirection);\r\n\t\t\t\tparticle.position.addInPlace(this._scaledDirection);\r\n\r\n\t\t\t\tthis.gravity.scaleToRef(this._scaledUpdateSpeed, this._scaledGravity);\r\n\t\t\t\tparticle.direction.addInPlace(this._scaledGravity);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparticleSystem.updateFunction = updateFunction;\r\n\r\n  particleSystem.start();\r\n}\r\n\r\nconst fireProjectile = (point) => {\r\n  const projectile = new BABYLON.Mesh.CreateSphere(\"projectile\", 16, 4, scene);\r\n  projectile.position = new BABYLON.Vector3(\r\n    (Math.round(point.x / 20) * 20) + 480,\r\n    projectile.position.y,\r\n    (Math.round((point.z + 10) / 20) * 20) - 10,\r\n  );\r\n  const vertAnim1 = () => {\r\n    const animationProjectile = new BABYLON.Animation(\r\n      \"myAnimation1\",\r\n      \"position.y\",\r\n      30,\r\n      BABYLON.Animation.ANIMATIONTYPE_FLOAT,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\r\n    );\r\n\r\n    const keys = [];\r\n    keys.push({frame: 0, value: 0});\r\n    keys.push({frame: 75, value: 100});\r\n\r\n    animationProjectile.setKeys(keys);\r\n\r\n    const easingFunction = new BABYLON.QuadraticEase();\r\n    easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEOUT);\r\n\r\n    animationProjectile.setEasingFunction(easingFunction);\r\n\r\n    return animationProjectile;\r\n  }\r\n  const vertAnim2 = () => {\r\n    const animationProjectile = new BABYLON.Animation(\r\n      \"myAnimation2\",\r\n      \"position.y\",\r\n      30,\r\n      BABYLON.Animation.ANIMATIONTYPE_FLOAT,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\r\n    );\r\n\r\n    const nextPos = 0;\r\n\r\n    const keys = [];\r\n    keys.push({frame: 76, value: 100});\r\n    keys.push({frame: 150, value: 0});\r\n\r\n    animationProjectile.setKeys(keys);\r\n\r\n    const easingFunction = new BABYLON.QuadraticEase();\r\n    easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEIN);\r\n\r\n    animationProjectile.setEasingFunction(easingFunction);\r\n\r\n    return animationProjectile;\r\n  }\r\n  const horizAnim = () => {\r\n    const animationProjectile = new BABYLON.Animation(\r\n      \"myAnimation3\",\r\n      \"position.x\",\r\n      30,\r\n      BABYLON.Animation.ANIMATIONTYPE_FLOAT,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\r\n    );\r\n\r\n    const nextPos = projectile.position.x - 240;\r\n\r\n    const keys = [];\r\n    keys.push({frame: 0, value: projectile.position.x});\r\n    keys.push({frame: 75, value: nextPos});\r\n    keys.push({frame: 75, value: nextPos + 240});\r\n    keys.push({frame: 150, value: nextPos});\r\n\r\n    animationProjectile.setKeys(keys);\r\n\r\n    return animationProjectile;\r\n  }\r\n\r\n  projectile.animations.push(vertAnim1());\r\n  projectile.animations.push(horizAnim());\r\n\r\n  attatchEmitter(projectile);\r\n\r\n  scene.beginAnimation(\r\n    projectile,\r\n    0, 75, false, 3,\r\n    () => {\r\n      projectile.animations = [];\r\n      projectile.animations.push(vertAnim2());\r\n      projectile.animations.push(horizAnim());\r\n      scene.beginAnimation(\r\n        projectile,\r\n        76, 150, false, 2,\r\n        () => {\r\n          const p = projectile;\r\n          const s = scene;\r\n          debugger\r\n        }\r\n      )\r\n    }\r\n  );\r\n}\r\n\r\nlet startingPoint;\r\nlet currentMesh;\r\n\r\nconst snapToGrid = () => {\r\n  const shipSegments = scene.getMeshesByTags(currentMesh.id);\r\n  shipSegments.forEach(segment => {\r\n    segment.position = new BABYLON.Vector3(\r\n      (Math.round((segment.position.x + 10) / 20) * 20) - 10,\r\n      segment.position.y,\r\n      (Math.round((segment.position.z + 10) / 20) * 20) - 10,\r\n    )\r\n  });\r\n}\r\nconst getGroundPosition = () => {\r\n  const pickInfo = scene.pick(scene.pointerX, scene.pointerY, (mesh) => {\r\n    return mesh == playerBoard;\r\n  });\r\n  if (pickInfo.hit) {\r\n    return pickInfo.pickedPoint;\r\n  }\r\n  return null;\r\n}\r\nconst onMouseDown = (e) => {\r\n  if (e.button !== 0) {\r\n    return;\r\n  }\r\n  const pickInfo = scene.pick(scene.pointerX, scene.pointerY, (mesh) => {\r\n    return mesh !== playerBoard;\r\n  });\r\n  if (pickInfo.hit) {\r\n    currentMesh = pickInfo.pickedMesh;\r\n    startingPoint = getGroundPosition();\r\n    if (startingPoint) {\r\n      setTimeout(() => {\r\n        camera.detachControl(canvas);\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\nconst onMouseUp = () => {\r\n  const pickInfo = scene.pick(scene.pointerX, scene.pointerY);\r\n  if (startingPoint) {\r\n    camera.attachControl(canvas, true);\r\n    startingPoint = null;\r\n    snapToGrid();\r\n    return;\r\n  } else if (pickInfo.pickedMesh && (pickInfo.pickedMesh.name === \"opponentBoard\")) {\r\n    opponentBoard.subMeshes[pickInfo.subMeshId].hit = true;\r\n    fireProjectile(pickInfo.pickedPoint);\r\n  }\r\n}\r\nconst onMouseMove = (e) => {\r\n    if (!startingPoint) {\r\n        return;\r\n    }\r\n\r\n    const current = getGroundPosition(e);\r\n\r\n    if (!current) {\r\n        return;\r\n    }\r\n\r\n    const diff = current.subtract(startingPoint);\r\n    const currentMeshes = scene.getMeshesByTags(currentMesh.id);\r\n    if (currentMeshes.length > 0) {\r\n      currentMeshes.forEach( mesh => {\r\n        mesh.position.addInPlace(diff);\r\n      });\r\n    } else {\r\n      currentMesh.position.addInPlace(diff);\r\n    }\r\n\r\n    startingPoint = current;\r\n\r\n}\r\nconst onMouseOver = (e) => {\r\n  e.preventDefault();\r\n  const s = scene;\r\n}\r\nconst onKeyPress = (e) => {\r\n  if (e.key === \" \") {\r\n    if (currentMesh) {\r\n      const currentMeshes = scene.getMeshesByTags(currentMesh.id);\r\n      const oldPosition = currentMesh.position;\r\n      currentMeshes.forEach( mesh => {\r\n        mesh.position = new BABYLON.Vector3(\r\n          mesh.position.z,\r\n          mesh.position.y,\r\n          mesh.position.x\r\n        );\r\n      });\r\n      const newPosition = currentMesh.position;\r\n      const positionOffset = new BABYLON.Vector3(\r\n        (oldPosition.x - newPosition.x),\r\n        (oldPosition.y - newPosition.y),\r\n        (oldPosition.z - newPosition.z),\r\n      );\r\n      currentMeshes.forEach( mesh => {\r\n        mesh.position.addInPlace(positionOffset);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\ncanvas.addEventListener(\"mousedown\", onMouseDown, false);\r\ncanvas.addEventListener(\"mouseup\", onMouseUp, false);\r\ncanvas.addEventListener(\"mousemove\", onMouseMove, false);\r\ncanvas.addEventListener(\"mouseover\", onMouseOver, false);\r\nwindow.addEventListener(\"keypress\", onKeyPress, false);\r\n\r\nscene.onDispose = () => {\r\n  canvas.removeEventListener(\"mousedown\", onMouseDown);\r\n  canvas.removeEventListener(\"mouseup\", onMouseUp);\r\n  canvas.removeEventListener(\"mousemove\", onMouseMove);\r\n  canvas.removeEventListener(\"mouseover\", onMouseOver);\r\n  window.removeEventListener(\"keypress\", onKeyPress);\r\n}\r\n\r\nconst playerShipNames = [\r\n  \"aircraftCarrier1\",\r\n  \"battleship1\",\r\n  \"destroyer1\",\r\n  \"submarine1\",\r\n  \"patrolBoat1\"\r\n];\r\n\r\nscene.registerBeforeRender(() => {\n  playerBoard.subMeshes.forEach( subMesh => {\n    subMesh.materialIndex = subMesh.originalMaterialIndex\n  });\n  playerShipNames.forEach( shipName => {\n    const shipSegments = scene.getMeshesByTags(shipName);\n    shipSegments.forEach(segment => {\n      let ray = new BABYLON.Ray(\n        new BABYLON.Vector3(\n          segment.position.x,\n          playerBoard.getBoundingInfo().boundingBox.maximumWorld.y + 1,\n          segment.position.z),\n          new BABYLON.Vector3(0, -1, 0)\n        );\n        const worldInverse = new BABYLON.Matrix();\n        playerBoard.getWorldMatrix().invertToRef(worldInverse);\n        ray = BABYLON.Ray.Transform(ray, worldInverse);\n        const pickInfo = playerBoard.intersects(ray);\n        if (pickInfo.hit) {\n          playerBoard.subMeshes[pickInfo.subMeshId].materialIndex = 2;\n        }\n      })\n  });\n  opponentBoard.subMeshes.forEach( subMesh => {\n    subMesh.materialIndex = subMesh.hit ? 3 : subMesh.originalMaterialIndex\n  });\n  const pickInfo = scene.pick(scene.pointerX, scene.pointerY);\n  if (pickInfo.pickedMesh && (pickInfo.pickedMesh.name === \"opponentBoard\")){\n    const subMesh = opponentBoard.subMeshes[pickInfo.subMeshId];\n    if (subMesh.hit) {\n      subMesh.materialIndex = 3;\n    } else {\n      subMesh.materialIndex = 2;\n    }\n  }\n});\n\nengine.runRenderLoop(() => {\n  scene.render();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/battleship.js\n **/","export default (scene) => {\r\n  const tiledGround = new BABYLON.Mesh.CreateTiledGround(\r\n    \"playerBoard\",\r\n    -100, -140, 100, 140,\r\n    { \"w\": 1, \"h\": 1 },\r\n    { 'h': 14, 'w': 10 },\r\n    scene\r\n  );\r\n  const lightGreenMaterial = new BABYLON.StandardMaterial(\"LightGreen\", scene);\r\n  lightGreenMaterial.diffuseColor = new BABYLON.Color3(.41, .61, .45);\r\n\r\n  const darkGreenMaterial = new BABYLON.StandardMaterial(\"DarkGreen\", scene);\r\n  darkGreenMaterial.diffuseColor = new BABYLON.Color3(.59, .80, .60);\r\n\r\n  const redMaterial = new BABYLON.StandardMaterial(\"Red\", scene);\r\n  redMaterial.diffuseColor = new BABYLON.Color3(1, 0, 0);\r\n\r\n  const multimat = new BABYLON.MultiMaterial(\"multi\", scene);\r\n  multimat.subMaterials.push(lightGreenMaterial);\r\n  multimat.subMaterials.push(darkGreenMaterial);\r\n  multimat.subMaterials.push(redMaterial);\r\n\r\n  tiledGround.material = multimat;\r\n\r\n  const verticesCount = tiledGround.getTotalVertices();\r\n  const tileIndicesLength = tiledGround.getIndices().length / (14 * 10);\r\n\r\n  tiledGround.subMeshes = [];\r\n  let base = 0;\r\n  for (let row = 0; row < 14; row++) {\r\n    for (let col = 0; col < 10; col++) {\r\n      const materialIndex = row%2 ^ col%2;\r\n      const subMesh = new BABYLON.SubMesh(\r\n        materialIndex,\r\n        0,\r\n        verticesCount,\r\n        base,\r\n        tileIndicesLength,\r\n        tiledGround\r\n      );\r\n      subMesh.originalMaterialIndex = materialIndex;\r\n      tiledGround.subMeshes.push(subMesh);\r\n      base += tileIndicesLength;\r\n    }\r\n  }\r\n  return tiledGround;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/player_board.js\n **/","export default (scene) => {\r\n  const tiledGround = new BABYLON.Mesh.CreateTiledGround(\r\n    \"opponentBoard\",\r\n    -100, -140, 100, 140,\r\n    { \"w\": 1, \"h\": 1 },\r\n    { 'h': 14, 'w': 10 },\r\n    scene\r\n  );\r\n  const lightRedMaterial = new BABYLON.StandardMaterial(\"LightRed\", scene);\r\n  lightRedMaterial.diffuseColor = new BABYLON.Color3(.95, 0, 0);\r\n\r\n  const darkRedMaterial = new BABYLON.StandardMaterial(\"DarkRed\", scene);\r\n  darkRedMaterial.diffuseColor = new BABYLON.Color3(.65, 0, 0);\r\n\r\n  const yellowMaterial = new BABYLON.StandardMaterial(\"Yellow\", scene);\r\n  yellowMaterial.diffuseColor = new BABYLON.Color3(1, 1, 0);\r\n\r\n  const orangeMaterial = new BABYLON.StandardMaterial(\"Orange\", scene);\r\n  orangeMaterial.diffuseColor = new BABYLON.Color3(1, .8, 0);\r\n\r\n  const multimat = new BABYLON.MultiMaterial(\"multi\", scene);\r\n  multimat.subMaterials.push(lightRedMaterial);\r\n  multimat.subMaterials.push(darkRedMaterial);\r\n  multimat.subMaterials.push(yellowMaterial);\r\n  multimat.subMaterials.push(orangeMaterial);\r\n\r\n  tiledGround.material = multimat;\r\n  const verticesCount = tiledGround.getTotalVertices();\r\n  const tileIndicesLength = tiledGround.getIndices().length / (14 * 10);\r\n\r\n  tiledGround.subMeshes = [];\r\n  let base = 0;\r\n  for (let row = 0; row < 14; row++) {\r\n    for (let col = 0; col < 10; col++) {\r\n      const materialIndex = row%2 ^ col%2;\r\n      const subMesh = new BABYLON.SubMesh(\r\n        materialIndex,\r\n        0,\r\n        verticesCount,\r\n        base,\r\n        tileIndicesLength,\r\n        tiledGround\r\n      );\r\n      subMesh.originalMaterialIndex = materialIndex;\r\n      tiledGround.subMeshes.push(subMesh);\r\n      base += tileIndicesLength;\r\n    }\r\n  }\r\n  return tiledGround;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/opponent_board.js\n **/","const rotate = (mesh, scene) => {\r\n  const currentMeshes = scene.getMeshesByTags(mesh.id);\r\n  const oldPosition = mesh.position;\r\n  currentMeshes.forEach( mesh => {\r\n    mesh.position = new BABYLON.Vector3(\r\n      mesh.position.z,\r\n      mesh.position.y,\r\n      mesh.position.x\r\n    );\r\n  });\r\n  const newPosition = mesh.position;\r\n  const positionOffset = new BABYLON.Vector3(\r\n    (oldPosition.x - newPosition.x),\r\n    (oldPosition.y - newPosition.y),\r\n    (oldPosition.z - newPosition.z),\r\n  );\r\n  currentMeshes.forEach( mesh => {\r\n    mesh.position.addInPlace(positionOffset);\r\n  });\r\n};\r\n\r\nexport default (name, boardName, length, scene) => {\r\n  // const ship = new BABYLON.Mesh.CreateBox(\"ship1\", 20, scene);\r\n  // ship.isVisible = false;\r\n  const boxes = [];\r\n  for (let i = 1; i <= length; i ++) {\r\n    boxes.push(new BABYLON.Mesh.CreateBox( name, 20, scene ));\r\n  }\r\n  boxes.forEach( (box, idx) => {\r\n    BABYLON.Tags.AddTagsTo(box, name);\r\n    if (boardName === \"playerBoard\") {\r\n      box.position.x = 20 * idx;\r\n    } else {\r\n      box.position.x = (20 * idx) - 200;\r\n      box.position.z = 10;\r\n      // box.visibility = false;\r\n      box.isPickable = false;\r\n    }\r\n  });\r\n  if (boardName === \"opponentBoard\") {\r\n    rotate(boxes[0], scene);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/ship.js\n **/"],"sourceRoot":""}